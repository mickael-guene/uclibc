 This README explain how to recompile uclibc for fdpic using an fdpic toolchain.

prerequisite :
 - Having an fdpic toolchain installed
 - Update your path so it include arm-v7-linux-uclibceabi-gcc binary provide by fdpic toolchain
 - Have access to kernel tree for your target

1) prepare directory structure
 a) define WORK environment variable to your working directory
$ export WORK=/tmp/uclibc
 b) create directory structure
$ mkdir -p ${WORK}/kernel
$ mkdir -p ${WORK}/kernel_headers
$ mkdir -p ${WORK}/uclibc
$ mkdir -p ${WORK}/uclibc_install

2) kernel headers
 a) install your kernel source tree in ${WORK}/kernel
 b) install kernel headers inside ${WORK}/kernel_headers
$ cd ${WORK}/kernel
$ make headers_install ARCH=arm INSTALL_HDR_PATH=${WORK}/kernel_headers CROSS_COMPILE=arm-v7-linux-uclibceabi-

3) uclibc
 a) install fdpic uclibc source tree in ${WORK}/uclibc
 b) configure uclibc
$ cd ${WORK}/uclibc
$ cp config_template .config
$ sed -i "s;__KERNEL_HEADERS__;${WORK}/kernel_headers/include;g" .config
$ sed -i "s;__CROSS_COMPILER_PREFIX__;arm-v7-linux-uclibceabi-;g" .config
$ sed -i "s;__DODEBUG__;# DODEBUG is not set;g" .config
$ sed -i "s;# COMPILE_IN_THUMB_MODE is not set;COMPILE_IN_THUMB_MODE=y;g" .config
$ sed -i "s;__DOSTRIP__;# DOSTRIP is not set;g" .config

 c) compile uclibc
$ cd ${WORK}/uclibc
$ make all

 d) install uclibc
$ cd ${WORK}/uclibc
$ make PREFIX=${WORK}/uclibc_install install

